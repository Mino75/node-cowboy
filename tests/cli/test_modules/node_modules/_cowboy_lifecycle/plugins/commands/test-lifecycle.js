
var _ = require('underscore');
var optimist = require('optimist');
var util = require('util');

var Command = module.exports = function() {};

Command.prototype.help = function() {
    return {'description': 'help'};
};

Command.prototype.validate = function(ctx, done) {
    console.log('validate');
    var msg = optimist(ctx.args()).argv.v;
    if (!msg) {
        // If -v was specified, we'll just exit with an error
        return done('validation failed');
    }

    console.log('validate: %s', msg);
    return done();
};

Command.prototype.timeout = function() {
    console.log('timeout');
    return 5000;
};

Command.prototype.before = function(ctx, done) {
    console.log('before: %s', optimist(ctx.args()).argv.b);
    return done();
};

Command.prototype.exec = function(ctx, reply, done) {
    reply(util.format('exec: %s', optimist(ctx.args()).argv.o));
    return done();
};

Command.prototype.hostEnd = function(ctx, host, response, done) {
    console.log('%s: %s (arg: %s)', host, response, optimist(ctx.args()).argv.h);
    return done();
};

Command.prototype.end = function(ctx, responses, expired, done) {
    var host = _.keys(responses)[0];
    console.log('%s: %s (arg: %s)', host, responses[host], optimist(ctx.args()).argv.e);
    return done();
};
